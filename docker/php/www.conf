[global]
error_log = /var/log/php/error.php-fpm.log
log_limit = 8192

[www]
access.format = "%{REMOTE_ADDR}e - %u %t "%m %r" %s %{mili}d %{kilo}M %C%%"
; access.log = /proc/self/fd/2
access.log = /var/log/php/php-fpm.log
catch_workers_output = yes
decorate_workers_output = no
user = app
group = app
; disabled sock for now, to be more like DO server
;listen = /var/run/php-fpm/php-fpm.sock
listen = 0.0.0.0:9000
listen.owner = www-data
listen.group = www-data
listen.mode = 0666

pm.status_path = /php-fpm-status

; basic settings
;pm = dynamic
;pm.max_children = 40
;pm.start_servers = 15
;pm.min_spare_servers = 15
;pm.max_spare_servers = 25

;pm = static
;pm.max_children = 75
;pm.start_servers = 50
;pm.min_spare_servers = 50
;pm.max_spare_servers = 80
;pm.max_requests = 50

; Ondemand process manager
;pm = ondemand

; The number of child processes to be created when pm is set to 'static' and the
; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
; This value sets the limit on the number of simultaneous requests that will be
; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.
; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP
; CGI. The below defaults are based on a server without much resources. Don't
; forget to tweak pm.* to fit your needs.
; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'
; Note: This value is mandatory.
;pm.max_children = 500

; The number of seconds after which an idle process will be killed.
; Note: Used only when pm is set to 'ondemand'
; Default Value: 10s
;pm.process_idle_timeout = 10s;

; The number of requests each child process should execute before respawning.
; This can be useful to work around memory leaks in 3rd party libraries. For
; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.
; Default Value: 0
;pm.max_requests = 1000


; tuning taken from https://tideways.com/profiler/blog/an-introduction-to-php-fpm-tuning
; process size is 66mb
; ps --no-headers -o "rss,cmd" -C php-fpm | awk '{ sum+=$1 } END { printf ("%d%s\n", sum/NR/1024,"M") }'
pm = static
; (Total RAM â€“ Memory used for Linux, DB, etc.) / process size = 13774 / 66
pm.max_children = 150
;pm.max_children = 124
; cpu cores x 4
;pm.start_servers = 32
; Number of CPU cores x 2
;pm.min_spare_servers = 16
;pm.max_spare_servers = 32
pm.max_requests = 1000
pm.process_idle_timeout = 10

; Make specific Docker environment variables available to PHP
env[COMMIT_HASH] = $COMMIT_HASH
catch_workers_output = yes
clear_env = no

; php_admin_value[error_log] = /dev/stderr
php_admin_value[error_log] = /var/log/php/error.php-fpm.log

php_admin_flag[log_errors] = on
php_flag[display_errors] = off